<!DOCTYPE HTML>
<html>
<head>
<style>
.all{
  width: 100vw;
  height: 90vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.lose-overlay, .win-overlay{
  text-align: center;
  display: flex;
  position: absolute;
  background-color: black;
  color: white;
  flex-wrap: wrap;
  justify-content: center;
  border-radius: 50%;
  opacity: 0.9;
  align-items: center;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 9;
}
.win{
  display: flex;
  font-size: 9.5vw;
  opacity: 0.9;
  color: white;
  margin-top: 3vw;
}
.play-again{
  margin-bottom: 7vw;
}
.choice{
  display: flex;
  cursor: pointer;
  border: none;
  font-size: 9.5vw;
  opacity: 0.9;
  background-color: transparent;
  color: white;
}

.innerCircle{
  flex-wrap: wrap;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  height: 30vw;
  width: 30vw;
  border-radius: 50%;
  background-color: black;
  z-index: 3;
  margin-top: 3vw;
}

.innerCircleItem{
  margin: 1px;
}
#counter, #start, #strict{
  width: 20%;
  height: 20%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  }
#startText, #strictText{
  text-align: center;
  width: 100%;
  margin: 3% 0;
  font-size: 2vw;
}
#startButton, #strictButton{
  width: 60%;
  height: 60%;
  border-radius: 50%;
  border: 0.5vw tan solid;
  box-shadow: 0 0.5vw #999;
  margin-bottom: 7%;
}
#startButton:active, #strictButton:active{
  box-shadow: 0 0.25vw #666;
  transform: translatY(4px);
}
#startButton{
  background-color: red;
}
#strictButton{
  background-color: yellow;
}
#counter{
  border: 0.2vw solid white;
  height: 10%;
  font-size: 3.5vw;
  color: red;
  margin-bottom: 5%;
  margin-right: 5%;
}
#start{
}
#strict{
  margin-bottom: 13.5%;
}

#title{
  margin-top: 3vw;
  width: 100%;
  text-align: center;
  font-size: 8vw;
}


.simon{
  margin-top: 4vw;
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  border-radius: 50%;
  border: 1px solid black;
  height: 60vw;
  width: 60vw;
  background-color: black;
  justify-content: space-evenly;
  align-items: center;
}
#title{
  font-size: 7vw;
}


#indicator{
  border: 1px white solid;
  width: 25%;
  height: 25%;
  border-radius: 50%;
  margin: 3% 15%;
}

.colors{
  border: 1px solid black;
  width: 46%;
  height: 46%;
  margin: auto;
  opacity: 0.75;
  cursor: pointer;
  outline: none;
  -webkit-tap-highlight-color: transparent;
  }
button{
  border: none;
  cursor: pointer;
  outline: none;
}



#blue:active, #green:active, #yellow:active, #red:active{
  opacity: 1;
}
#blue.active, #green.active, #yellow.active, #red.active{
  opacity: 1;
}


.colors-topleft{
  border-radius: 100% 0 0 0;
  background-color: green;
}
.colors-topright{
  border-radius: 0 100% 0 0;
  background-color: red;
}
.colors-botright{
  border-radius: 0 0 100% 0;
  background-color: blue;
}
.colors-botleft{
  border-radius: 0 0 0 100%;
  background-color: yellow;
}



@media screen and (max-width: 850px){
  .all{
    align-items: center;
  }
  .simon{
    width: 90vw;
    height: 90vw;
  }
  .innerCircle{
    margin-top: 3vw;
    width: 45vw;
    height: 45vw;
  }
  .colors{
    width: 46%;
    height: 46%;
  }
  #title{
    font-size: 11vw;
  }
  #startText, #strictText{
    font-size: 3vw;
  }
}
@media screen and (min-width: 1250px){
  
  .simon{
    width: 45vw;
    height: 45vw;
  }
  .innerCircle{
    margin-top: 3.5vw;
    width: 22.5vw;
    height: 22.5vw;
  }
  #title{
    font-size: 5vw;
  }
  #strictText, #startText{
    font-size: 1.5vw;
  }
  #counter, #start, #strict{
    
  }
}


</style>
</head>
<body>
 <div class = 'all'>
<div class = 'simon' id = 'simon'>  
  <div class = 'win-overlay' id = 'win-overlay'>
    <div class = 'win' id = 'win'>YOU WIN!</div>
    <button class = 'play-again choice' id = 'play-again'>Play Again?</button>
  </div>
  <div class = "lose-overlay" id = "lose-overlay">
    <button class = 'try-again choice' id = 'try-again'>Try-again?</button>
    <button class = 'start-over choice' id = 'start-over'>Start Over</button>
  </div>
  <button class = 'colors colors-topleft' id = "green"></button>
  <audio id = 'greenSound' preload = 'auto'>
    <source src = 'https://s3.amazonaws.com/freecodecamp/simonSound1.mp3'></source>
  </audio>
  <button class = 'colors colors-topright' id = "red"></button>
  <audio id = 'redSound' preload = 'auto'>
    <source src = 'https://s3.amazonaws.com/freecodecamp/simonSound2.mp3'></source>
  </audio>
  <button class = 'colors colors-botleft' id = "yellow"></button>
  <audio id = 'yellowSound' preload = 'auto'>
    <source src = 'https://s3.amazonaws.com/freecodecamp/simonSound4.mp3'></source>
  </audio>
  <button class = 'colors colors-botright' id = "blue"></button>
  <audio id = 'blueSound' preload = 'auto'>
    <source src = 'https://s3.amazonaws.com/freecodecamp/simonSound3.mp3'></source>
  </audio>

 
</div>
  <div class = 'innerCircle' id = 'innerCircle'>
    <div class = 'innerCircleItem' id = 'title'>SIMON</div>
    <div class = 'innerCircleItem' id = 'counter'>0</div>
    
    <div class = 'innerCircleItem' id = 'start'>      
    <button class = 'btn innerCircleItem' id = 'startButton'></button>
      <div class = 'innerCircleItem' id = 'startText'>Start</div>
    </div>
    
    <div class = "innerCircleItem" id = "strict">
      <div class = "indicator" id = "indicator"></div>
    <button class = 'btn innerCircleItem' id = 'strictButton'></button>
      <div class = 'innerCircleItem' id = 'strictText'>Strict</div>
    </div>
      
  </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
var colorArray = ["green", "blue", "yellow", "red"];
var computerArray = [];
var playerArray = [];
var turn;
var counter;
var loopX = 0;
var done;
var time = 1000;
var repeat; 
var strict;

$(".lose-overlay").hide();
$(".win-overlay").hide();

$("button").on('click touchend', function(x){
  x.preventDefault();
})

$("#strict").on("click touchend", function(){
  if (computerArray.length < 2){
    if (strict == true){
      strict = false;      document.getElementById("indicator").style.backgroundColor = "black";
    }
    else{
      strict = true;      document.getElementById("indicator").style.backgroundColor = "red";
    }
  }
  else {
    return;
  }
  console.log('strict:', strict);
})

$(".try-again").on("click touchend", function(){
  $(".lose-overlay").hide();
  console.log("doing things");
  turn = 'player'
  repeat = true;
  loopX = 0;
  playerArray = [];
  arrayLoop(computerArray);
  
})

$(".start-over").on('click touchend', function(){
  $(".lose-overlay").hide();
  start();
})

$(".play-again").on("click touchend", function(){
  $(".win-overlay").hide();
  start();
})

function soundPlay(color){
  var audio = $("#" + color + "Sound")[0];
  audio.play();
}

$(".colors").on("click touchstart", function(){
  soundPlay(this.id);
    addColor(this.id, playerArray);
  if (turn == "player"){
    //Make sure that after the color press the player array matches the computer array.     
    if (playerArray.length == computerArray.length){
    for (var x in playerArray){
      //If player has chosen a wrong color, overlay will come up with try-again or start-over options. If strict is on, start-over will be only option. 
      if (playerArray[x] !== computerArray[x]){
        $('.lose-overlay').show();
        if (strict == true){
        $('.try-again').hide();
        }
        else {
          $(".try-again").show();
        }
        return;
      }
    }
      turn = 'computer';
      repeat = false;
      setTimeout(function(){
        computerTurn();
      },time)
    }
  }
})

function addColor(colorId, arr){
  arr.push(colorId);
}

function activate(colorId){
  soundPlay(colorId);
  $("#" + colorId).addClass("active").delay(time).queue(function(){
    $("#" + colorId).removeClass("active").dequeue()});
}

//Function that will go through computer Array and activate colors that are in the array for allotted amount of time. At end of array, will add another color to the end, unless repeat ('try-again was chosen') is true, then it will just repeat the array without adding color. 
function arrayLoop(arr){
  setTimeout(function(){
    var color = arr[loopX];
    activate(color);
    loopX++;
    if (loopX < arr.length){
      arrayLoop(arr);
    }
    else {
      if (repeat == true){
        return;
      }
      computerColor(arr);
      return;
    }
  },time + 500);
}



function computerColor(arr){
  var random = Math.floor(Math.random() * Math.floor(colorArray.length))
    addColor(colorArray[random], arr);
    console.log(arr);
    var color = colorArray[random];
    console.log('time:', time);
    setTimeout(function(){
    activate(color);
    turn = "player";
    playerArray = [];
    },time + 500)
  console.log('leaving computercolor()');
}




function computerTurn(){
  //Will need to make this compiled each turn. Maintain first press is always the same color once first round goes, i.e. [red], [red, blue], [red, blue, blue]. And be able to go through array to show each color every round. Will need to use for loop to "press" each button in the sequence, then use the function to add another color to that array. Each time it's the player's turn, start the array over?
  counter += 1;  
  if (counter > 20){
    win();
  }
  if (counter < 10){
    $("#counter").text("0" + counter);
  }
  else{
  $("#counter").text(counter);
  }
  
  if (counter > 1){
    loopX = 0;
    arrayLoop(computerArray);
  }
    else{
      computerColor(computerArray);
    }
}

function start(){
  repeat;
  playerArray = [];
  computerArray = [];
  counter = 0;
  computerTurn();
}

$('#start').on('click touchend', function(){
  start();
})

function win(){
  //Will make win-overlay that says "YOU WIN!" and says "Play again?" underneath. May attach fanfare or something when winning?
  $(".win-overlay").show();
}

</script>
</body>
</html>
